#!/usr/bin/env bash

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
ROOT_DIR="$(dirname "$SCRIPT_DIR")"
FCD_FILE="$ROOT_DIR/.fcd.txt"

source "$ROOT_DIR/lib/fcd_fzf.sh"
source "$ROOT_DIR/lib/fcd_help.sh"
source "$ROOT_DIR/lib/fcd_print.sh"
source "$ROOT_DIR/lib/fcd_add.sh"
source "$ROOT_DIR/lib/fcd_clear.sh"
source "$ROOT_DIR/lib/fcd_remove.sh"
source "$ROOT_DIR/lib/fcd_bookmark.sh"
source "$ROOT_DIR/lib/utils.sh"

fcd() {
  # If file doesn't exist, create it
  if [[ ! -f "$FCD_FILE" ]]; then
    touch "$FCD_FILE"
  fi

  # Handle no args provided (MAIN FUNCTIONALITY with fzf)
  if [[ $# -eq 0 ]]; then
    __fcd_fzf "$FCD_FILE"
    return
  fi

  # Handle with LABEL argument
  if [[ $# -eq 1 && "$1" != -* ]]; then
    echo "[DEBUG]: Using fcd [$1]"
    return
  fi

  local current_flag=""
  local current_flag_val=""
  local flag_error_message="Error: Only one flag can be used at a time."
  while [[ $# -gt 0 ]]; do
    case "$1" in
      # <--- PRINT BOOKMARKS (.fcd.txt) TO CONSOLE ---> #
      -p)
        __check_flag_used "$current_flag" "$flag_error_message" || return 1
        current_flag="-p"
        __fcd_print "$FCD_FILE"
        shift
        ;;
      # <--- PRINT FCD DOCUMENTATION TO CONSOLE ---> #
      -h)
        __check_flag_used "$current_flag" "$flag_error_message" || return 1
        current_flag="-h"
        __fcd_help
        shift
        ;;
      # <--- CLEAR ALL BOOKMARKS FROM '.fcd.txt' ---> #
      -c)
        __check_flag_used "$current_flag" "$flag_error_message" || return 1
        current_flag="-c"
        __fcd_clear "$FCD_FILE"
        shift
        ;;
      # <--- ADD BOOKMARK TO '.fcd.txt' ---> #
      -a)
        __check_flag_used "$current_flag" "$flag_error_message" || return 1
        __check_flag_arg "$2" "-a" || return 1
        current_flag="-a"
        current_flag_val="$2"
        __fcd_add "$FCD_FILE" "$current_flag_val"
        shift 2
        ;;
      # <--- REMOVE BOOKMARK FROM '.fcd.txt' ---> #
      -r)
        __check_flag_used "$current_flag" "$flag_error_message" || return 1
        __check_flag_arg "$2" "-r" || return 1
        current_flag="-r"
        current_flag_val="$2"
        __fcd_remove "$FCD_FILE" "$current_flag_val" || return 1
        shift 2
        ;;
      -b)
        __check_flag_used "$current_flag" "$flag_error_message" || return 1
        __check_flag_arg "$2" "-b" || return 1
        current_flag="-b"
        current_flag_val="$2"
        __fcd_bookmark "$FCD_FILE" "$current_flag_val"
        shift 2
        ;;
      *)
        echo "Unknown argument: '$1'" >&2
        return 1
        ;;
      esac
    done
}
